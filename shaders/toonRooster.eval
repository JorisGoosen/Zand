#version 440

uniform mat4 projectie;
uniform mat4 modelView;
uniform bool isZand;

layout(binding = 0)	uniform sampler2D basis0;

layout(quads, equal_spacing, ccw) in;

vec4 interpolate4(in vec4 v0, in vec4 v1, in vec4 v2, in vec4 v3)
{
 vec4 a = mix(v0, v1, gl_TessCoord.x);
 vec4 b = mix(v3, v2, gl_TessCoord.x);
 return mix(a, b, gl_TessCoord.y);
}

vec2 interpolate2(in vec2 v0, in vec2 v1, in vec2 v2, in vec2 v3)
{
 vec2 a = mix(v0, v1, gl_TessCoord.x);
 vec2 b = mix(v3, v2, gl_TessCoord.x);
 return mix(a, b, gl_TessCoord.y);
}

out vec2 texFrag;
in vec2 tex[];

uniform float hoogteSchalingInv;

void main()
{
    vec4 p = 
    interpolate4(
        gl_in[0].gl_Position, 
        gl_in[1].gl_Position, 
        gl_in[2].gl_Position, 
        gl_in[3].gl_Position
    );

    texFrag = interpolate2(tex[0], tex[1], tex[2], tex[3]);
    
    vec4 basis = texture(basis0, texFrag);

    if(isZand)	p.y = basis.r;
    else        p.y = basis.r + basis.b;

	p.y *= hoogteSchalingInv;

    gl_Position = projectie * modelView * p;

    
}